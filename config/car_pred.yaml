state:

  # Upper and lower bounds for experimental space (meters, meters, radians). [x, y, theta]
  lower: [0.0, 0.0, 0] 
  upper: [20, 20, 6.28318531]

pred:
  # Total number of cars that you will be simulating. 
  total_number_of_cars: 1

  # Start position of cars(s) and list of potential goal locations
  car1_real_start: [11.5, 1.5, 1.57079633] 
  car1_real_goals: [[11.5, 18.5, 1.57079633]] 

  # color coding for car visualization (RGB)
  car1_color: [1.0, 0.0, 0.0]

  # Dimensions of the prediction map
  sim_height: 20  # (num x states)
  sim_width: 20   # (num y states)
  sim_theta: 7    # (num theta states)

  # Num timesteps into the future to predict
  fwd_tsteps: 10

  # Initial betas depending on model
  beta_adaptive: [0.1, 0.3, 1.0, 3.0, 10.0]
  beta_rational: [0.05]
  beta_irrational: [10.0]

  # Car's height (in meters)
  car_height: 1.5

  # Car's driving speed (m/s) 
  car_vel: 1 

  # Probability threshold 
  prob_thresh: 0.01

  # Process noise (epsilon-stubborn model)
  epsilon_dest: 0.02
  epsilon_beta: 0.02

sim:
  # Specify the robot prefixes to listen to (obstacles)
  robot_prefixes: ["HY4", "HY5"]

  # Timestep 
  dt: 0.01

  # Potential field goal parameters
  #   alpha  -- attraction amount
  #   goal_s -- potential field spread (m)
  #   goal_r -- goal radius (m)
  alpha_pot_field: 0.5
  goal_s: 1
  goal_r: 0.5

  # Potential field obstacle parameters
  #   beta  -- obstacle's repulsion amount
  #   obstacle_s -- potential field spread (m)
  #   obstacle_r -- obstacle radius (m)
  beta_pot_field: 1.0
  obstacle_s: 1
  obstacle_r: 0.25



