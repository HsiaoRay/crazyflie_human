state:

  # Upper and lower bounds for experimental space (meters). [x, y, z]
  # Do this for each human
  lower1: [10.0, -5.0, 0.0] 
  upper1: [12.0, 5.0, 2.0] 

  lower2: [-10.0, -6.0, 0.0] 
  upper2: [-8.0, 4.0, 2.0] 

  lower3: [-10.0, -8.0, 0.0] 
  upper3: [-8.0, 6.0, 2.0]

  #lower4: [-10.0, -10.0, 0.0] 
  #upper4: [-5.0, -2.0, 2.0]  
  lower4: [-7.0, -3.0, 0.0]
  upper4: [1.0, 3.0, 2.0]

  lower5: [-4.0, -6.0, 0.0] 
  upper5: [2.0, 1.0, 2.0]  

  lower6: [-7.0, 8.0, 0.0] 
  upper6: [12.0, 10.0, 2.0]  

  lower7: [-7.0, 5.0, 0.0] 
  upper7: [5.0, 10.0, 2.0]  

  lower8: [10.0, -6.0, 0.0] 
  upper8: [14.0, 2.0, 2.0]  

  lower9: [6.0, 1.0, 0.0] 
  upper9: [14.0, 10.0, 2.0]  

  lower10: [-10.0, -10.0, 0.0] 
  upper10: [0.0, -8.0, 2.0]  

pred:
  # Total number of humans that you will be simulating. Used 
  # by potential_field_human.py to avoid other humans.
  total_number_of_humans: 10

  # Start position of human(s) and list of potential goal locations
  human1_real_start: [10.0, -5.0] 
  human1_real_goals: [[12.0, 5.0]] 

  human2_real_start: [-10.0, 4.0] 
  human2_real_goals: [[-8.0, -6.0]] 

  human3_real_start: [-10.0, -8.0] 
  human3_real_goals: [[-9.0, 6.0], [-8.0, -6.0]] # add human2's goals 

  #human4_real_start: [-5.0, -10.0] 
  #human4_real_goals: [[-10.0, -2.0]] 
  #human4_real_start: [-5.0, -10.0] #[2.0, -8.0] 
  #human4_real_goals: [[-10.0, -2.0]] #[[7.0, 4.0]] #[[2.0, 4.0]] 
  human4_real_start: [-6.0, -2.0] 
  human4_real_goals: [[-1.0, 2.0], [-4.0, 1.0]] # add human 5's goals 

  human5_real_start: [2.0, -6.0] 
  human5_real_goals: [[-4.0, 1.0]] 

  human6_real_start: [12.0, 9.0] 
  human6_real_goals: [[-7.0, 9.0], [5.0, 10.0]] # add human7's goals 

  human7_real_start: [-7.0, 5.0] 
  human7_real_goals: [[5.0, 10.0], [-7.0, 9.0]] # add human6's goals 

  human8_real_start: [10.0, 2.0] 
  human8_real_goals: [[14.0, -6.0], [14.0, 1.0]] # add human9's goals 

  human9_real_start: [6.0, 10.0] 
  human9_real_goals: [[14.0, 1.0], [12.0, 5.0]] # add human1's goals 

  human10_real_start: [-10.0, -10.0] 
  human10_real_goals: [[0.0, -8.0]] 

  # Color coding for human visualization (RGB)
  human1_color: [1.0, 0.0, 0.0]
  human2_color: [1.0, 0.0, 0.0]
  human3_color: [1.0, 0.0, 0.0]
  human4_color: [1.0, 0.0, 0.0]
  human5_color: [1.0, 0.0, 0.0]
  human6_color: [1.0, 0.0, 0.0]
  human7_color: [1.0, 0.0, 0.0]
  human8_color: [1.0, 0.0, 0.0]
  human9_color: [1.0, 0.0, 0.0]
  human10_color: [1.0, 0.0, 0.0]

  # Dimensions of the prediction map (for each human)

  sim_height1: 40
  sim_width1: 8

  sim_height2: 40
  sim_width2: 8

  sim_height3: 56
  sim_width3: 8

  sim_height4: 28
  sim_width4: 36

  sim_height5: 28
  sim_width5: 24

  sim_height6: 8
  sim_width6: 76
  
  sim_height7: 20
  sim_width7: 48
  
  sim_height8: 32
  sim_width8: 16
 
  sim_height9: 36
  sim_width9: 32

  sim_height10: 8
  sim_width10: 40

  # Num timesteps into the future to predict
  fwd_tsteps: 10

  # Initial betas depending on model
  beta_adaptive: [0.1, 0.3, 1.0, 3.0, 10.0]
  beta_rational: [0.05]
  beta_irrational: [10.0]

  # Human's height (in meters)
  human_height: 1.67

  # Human's walking speed (m/s) -- human walking speed is 1.4 m/s
  human_vel: 0.7 

  # Probability threshold 
  prob_thresh: 0.01

  # Process noise (epsilon-stubborn model)
  epsilon_dest: 0.02
  epsilon_beta: 0.02

sim:
  # Timestep 
  dt: 0.01

  # Specify the robot prefixes to listen to (obstacles)
  robot_prefixes: ["HY4", "HY5", "HY6", "HY7", "HY8"]

  # Potential field goal parameters
  #   alpha  -- attraction amount
  #   goal_s -- potential field spread (m)
  #   goal_r -- goal radius (m)
  alpha_pot_field: 0.16
  goal_s: 1
  goal_r: 0.5

  # Potential field obstacle parameters
  #   beta  -- obstacle's repulsion amount
  #   obstacle_s -- potential field spread (m)
  #   obstacle_r -- obstacle radius (m)
  beta_pot_field: 0.5
  obstacle_s: 1
  obstacle_r: 0.25